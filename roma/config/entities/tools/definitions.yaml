# Level 1: Tool Definitions
# Reusable tool configurations for composition in agents
# Tools can be either:
# - Default Agno toolkits (no implementation field)
# - Custom toolkit implementations (has implementation field)

# ============================================
# DEFAULT AGNO TOOLKITS
# ============================================

# Web Search Tools (Agno Default Toolkits)
web_search:
  google:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "google_search"
    type: "web_search"
    enabled: true
    include_tools: ["search"]  # Only include search functionality
    exclude_tools: []  # No exclusions
    config:
      api_key: "${oc.env:GOOGLE_API_KEY}"
      cx: "${oc.env:GOOGLE_CX}"
      num_results: 10
      safe_search: true
      
  exa:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "exa_search"
    type: "web_search"
    enabled: ${oc.env:EXA_API_KEY,false}
    include_tools: ["search", "find_similar"]  # Include search and similarity tools
    exclude_tools: []  # No exclusions
    config:
      api_key: "${oc.env:EXA_API_KEY,}"
      use_autoprompt: true
      num_results: 10
      text_mode: "highlights"
      search_type: "neural"
      
  openai_web:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "openai_web_search"
    type: "web_search"
    enabled: true
    config:
      max_results: 5
      
  arxiv:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "arxiv_search"
    type: "web_search"
    enabled: true
    config:
      max_results: 10
      sort_by: "relevance"
      
  wikipedia:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "wikipedia_search"
    type: "web_search"
    enabled: true
    config:
      lang: "en"
      max_results: 5

# Code Execution Tools (Agno Default Toolkits)
code_execution:
  e2b_sandbox:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "e2b_sandbox"
    type: "code_execution"
    enabled: ${oc.env:E2B_API_KEY,false}
    config:
      api_key: "${oc.env:E2B_API_KEY,}"
      template: "python"
      timeout: 30
      memory_mb: 512
      cpu_count: 1
      
  python:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "python_tools"
    type: "code_execution"
    enabled: true
    include_tools: ["run_python_code"]  # Include basic Python execution
    exclude_tools: ["install_package"]  # Exclude package installation for security
    config:
      save_and_run: false
      sandbox: true
      allowed_modules: ["math", "statistics", "json", "datetime", "pandas", "numpy"]
      timeout: 10
      
  jupyter:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "jupyter_kernel"
    type: "code_execution"
    enabled: false
    config:
      kernel: "python3"
      timeout: 30

# Reasoning Tools (Agno Default Toolkits)
reasoning:
  logic_analyzer:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "logic_analyzer"
    type: "reasoning"
    enabled: true
    config:
      methods: ["deduction", "induction", "abduction"]
      
  hypothesis_tester:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "hypothesis_tester"
    type: "reasoning"
    enabled: true
    config:
      confidence_threshold: 0.95

# Image Generation Tools (Agno Default Toolkits)
image_generation:
  dalle:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "dalle_3"
    type: "image_generation"
    enabled: true
    config:
      api_key: "${oc.env:OPENAI_API_KEY}"
      quality: "hd"
      style: "natural"
      
  stability:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "stable_diffusion"
    type: "image_generation"
    enabled: ${oc.env:STABILITY_API_KEY,false}
    config:
      api_key: "${oc.env:STABILITY_API_KEY,}"
      engine: "stable-diffusion-xl-1024-v1-0"

# Visualization Tools (Agno Default Toolkits)
visualization:
  mermaid:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "mermaid_diagram"
    type: "visualization"
    enabled: true
    config:
      theme: "default"
      output_format: "svg"

# ============================================
# CUSTOM TOOLKIT IMPLEMENTATIONS
# ============================================

# Data API Tools (Custom Implementations from v1)
data_apis:
  binance:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "binance_api"
    type: "data_api"
    implementation: "roma.toolkits.data.BinanceToolkit"  # Custom implementation
    enabled: ${oc.env:BINANCE_API_KEY,false}
    config:
      api_key: "${oc.env:BINANCE_API_KEY,}"
      api_secret: "${oc.env:BINANCE_API_SECRET,}"
      default_market_type: "spot"
      symbols: ["BTCUSDT", "ETHUSDT", "BNBUSDT", "SOLUSDT", "ADAUSDT"]
      data_dir: "./data/binance"
      parquet_threshold: 1000
      endpoints:
        - "spot"
        - "usdm"   # USDT-margined futures
        - "coinm"  # Coin-margined futures
      
  coingecko:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "coingecko_api"
    type: "data_api"
    implementation: "roma.toolkits.data.CoinGeckoToolkit"  # Custom implementation
    enabled: true
    config:
      api_key: "${oc.env:COINGECKO_API_KEY,}"
      pro: ${oc.env:COINGECKO_API_KEY,false}
      rate_limit: 50  # calls per minute
      data_dir: "./data/coingecko"
      cache_ttl: 300  # 5 minutes cache
      
  defillama:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "defillama_api"
    type: "data_api"
    implementation: "roma.toolkits.data.DeFiLlamaToolkit"  # Custom implementation
    enabled: true
    config:
      base_url: "https://api.llama.fi"
      rate_limit: 100
      data_dir: "./data/defillama"
      cache_ttl: 600  # 10 minutes cache
      
  arkham:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "arkham_api"
    type: "data_api"
    implementation: "roma.toolkits.data.ArkhamToolkit"  # Custom implementation
    enabled: ${oc.env:ARKHAM_API_KEY,false}
    config:
      api_key: "${oc.env:ARKHAM_API_KEY,}"
      base_url: "https://api.arkhamintelligence.com"
      data_dir: "./data/arkham"
      supported_chains: ["ethereum", "bitcoin", "polygon", "avalanche", "bsc"]
      
  dune:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "dune_analytics"
    type: "data_api"
    implementation: "roma.toolkits.data.DuneToolkit"  # Custom implementation
    enabled: ${oc.env:DUNE_API_KEY,false}
    config:
      api_key: "${oc.env:DUNE_API_KEY,}"
      base_url: "https://api.dune.com"
      data_dir: "./data/dune"
      
# Storage Tools (Mix of Agno and Custom)
storage:
  s3:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "s3_storage"
    type: "storage"
    # Default Agno S3 toolkit
    enabled: true
    config:
      bucket: "${oc.env:S3_BUCKET,roma-artifacts}"
      region: "${oc.env:AWS_REGION,us-east-1}"
      access_key: "${oc.env:AWS_ACCESS_KEY_ID}"
      secret_key: "${oc.env:AWS_SECRET_ACCESS_KEY}"
      
  local_fs:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "local_storage"
    type: "storage"
    implementation: "roma.toolkits.storage.LocalFileSystemToolkit"  # Custom implementation
    enabled: true
    config:
      base_path: "./data/artifacts"
      max_size_mb: 1000

# Knowledge Store Tools (Custom Implementations)
knowledge:
  vector_store:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "vector_store"
    type: "knowledge"
    implementation: "roma.toolkits.knowledge.QdrantToolkit"  # Custom implementation
    enabled: false
    config:
      url: "${oc.env:QDRANT_URL,http://localhost:6333}"
      api_key: "${oc.env:QDRANT_API_KEY,}"
      collection: "roma_knowledge"
      
  graph_store:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "graph_store"
    type: "knowledge"
    implementation: "roma.toolkits.knowledge.Neo4jToolkit"  # Custom implementation
    enabled: false
    config:
      uri: "${oc.env:NEO4J_URI,bolt://localhost:7687}"
      user: "${oc.env:NEO4J_USER,neo4j}"
      password: "${oc.env:NEO4J_PASSWORD}"
      
# Utility Tools (Mix of Agno and Custom)
utilities:
  web_scraper:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "web_scraper"
    type: "utility"
    # Default Agno web scraper
    enabled: true
    config:
      parser: "html.parser"
      timeout: 10
      user_agent: "ROMA/2.0"
      
  pdf_reader:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "pdf_reader"
    type: "utility"
    # Default Agno PDF reader
    enabled: true
    config:
      extract_images: false
      extract_tables: true
      
  csv_analyzer:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "csv_analyzer"
    type: "utility"
    # Default Agno CSV analyzer
    enabled: true
    config:
      encoding: "utf-8"
      delimiter: ","
      
  markdown_formatter:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "markdown_formatter"
    type: "utility"
    implementation: "roma.toolkits.utility.MarkdownFormatter"  # Custom implementation
    enabled: true
    config:
      flavor: "github"
      
  citation_manager:
    _target_: roma.domain.value_objects.config.tool_config.ToolConfig
    name: "citation_manager"
    type: "utility"
    implementation: "roma.toolkits.utility.CitationManager"  # Custom implementation
    enabled: true
    config:
      style: "apa"
      
# Note: Tool presets removed to avoid interpolation conflicts
# Individual tools can be referenced directly in agent configurations