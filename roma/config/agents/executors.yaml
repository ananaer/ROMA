# Level 2: Executor Agent Configurations
# All executors that perform atomic tasks


# ============================================
# EXECUTORS FOR ALL TASK TYPES
# ============================================

# RETRIEVE Executors (evolved from SEARCH in v1)
retrieve_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "RetrieveExecutor"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Executes data retrieval tasks using available tools"

  model: ${profiles.models.gpt_4o_mini}
  prompt_template: "executor/retrieve.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.web_search.google}
    - ${profiles.tools.web_search.exa}
    - ${profiles.tools.web_search.arxiv}
    - ${profiles.tools.web_search.wikipedia}
    - ${profiles.tools.utilities.web_scraper}
    - ${profiles.tools.utilities.pdf_reader}

  config:
    parallel_search: true
    deduplicate: true
    max_retries: 3
    result_ranking: "relevance"
    max_results_per_source: 10

openai_custom_retriever:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "OpenAICustomRetriever"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Direct API-based retrieval using OpenAI's search capabilities"

  model: ${profiles.models.gpt_4o}
  prompt_template: "executor/openai_retrieve.jinja2"
  output_schema: "ExecutorResult"

  config:
    use_openrouter: true
    model_id: "openai/gpt-4o-search-preview"

gemini_custom_retriever:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "GeminiCustomRetriever"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Direct API-based retrieval using Google Gemini's capabilities"

  model: ${profiles.models.gemini_1_5_flash}
  prompt_template: "executor/gemini_retrieve.jinja2"
  output_schema: "ExecutorResult"

exa_comprehensive_retriever:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "ExaComprehensiveRetriever"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Comprehensive retrieval using Exa API with LLM processing"

  model: ${profiles.models.gemini_1_5_pro}
  prompt_template: "executor/exa_retrieve.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.web_search.exa}

  config:
    num_results: 5
    prioritize_reliable_sources: true

crypto_retrieve_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "CryptoRetrieveExecutor"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Specialized executor for cryptocurrency and DeFi data retrieval"

  model: ${profiles.models.gpt_4o_mini}
  prompt_template: "executor/crypto_retrieve.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.web_search.google}
    - ${profiles.tools.utilities.web_scraper}
    - ${profiles.tools.data_apis.binance}
    - ${profiles.tools.data_apis.coingecko}
    - ${profiles.tools.data_apis.defillama}
    - ${profiles.tools.data_apis.dune}
    - ${profiles.tools.data_apis.arkham}

  config:
    include_price_data: true
    include_onchain_data: true
    networks: ["ethereum", "bsc", "polygon", "arbitrum"]
    timeframes: ["1h", "4h", "1d", "1w"]

fast_retrieve_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "FastRetrieveExecutor"
  type: "executor"
  task_type: "RETRIEVE"
  description: "Quick retrieval for simple queries"

  model: ${profiles.models.gpt_4o_mini}
  prompt_template: "executor/fast_retrieve.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.web_search.google}

  config:
    timeout: 5
    max_results: 5
    simple_mode: true

# WRITE Executors
write_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "WriteExecutor"
  type: "executor"
  task_type: "WRITE"
  description: "Executes writing tasks to create content"

  model: ${profiles.models.claude_3_5_sonnet}
  prompt_template: "executor/write.jinja2"
  output_schema: "ExecutorResult"

  config:
    output_format: "markdown"
    include_citations: true
    style_adaptation: true

report_writer:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "ReportWriter"
  type: "executor"
  task_type: "WRITE"
  description: "Writes detailed reports based on provided context"

  model: ${profiles.models.gemini_1_5_pro}
  prompt_template: "executor/report_writer.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.utilities.markdown_formatter}
    - ${profiles.tools.utilities.citation_manager}

  config:
    structure: "executive_summary"
    include_toc: true
    formatting: "professional"

crypto_research_writer:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "CryptoResearchWriter"
  type: "executor"
  task_type: "WRITE"
  description: "Comprehensive crypto research executor for blockchain and DeFi analysis"

  model: ${profiles.models.gemini_1_5_flash}
  prompt_template: "executor/crypto_research_writer.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.utilities.markdown_formatter}
    - ${profiles.tools.utilities.citation_manager}

  config:
    include_technical_analysis: true
    include_fundamental_analysis: true
    include_risk_assessment: true

# THINK Executors
think_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "ThinkExecutor"
  type: "executor"
  task_type: "THINK"
  description: "Executes analytical and reasoning tasks"

  model: ${profiles.models.o1_preview}
  prompt_template: "executor/think.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.reasoning.logic_analyzer}
    - ${profiles.tools.reasoning.hypothesis_tester}

  config:
    chain_of_thought: true
    step_by_step: true
    include_confidence: true

reasoning_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "ReasoningExecutor"
  type: "executor"
  task_type: "THINK"
  description: "Performs analysis and synthesis of information"

  model: ${profiles.models.gemini_1_5_pro}
  prompt_template: "executor/reasoning.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.code_execution.python}
    - ${profiles.tools.reasoning.logic_analyzer}

  config:
    save_and_run: false
    include_verification: true

crypto_market_analyzer:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "CryptoMarketAnalyzer"
  type: "executor"
  task_type: "THINK"
  description: "Advanced crypto market analyst for technical analysis and on-chain metrics"

  model: ${profiles.models.claude_3_5_sonnet}
  prompt_template: "executor/crypto_market_analyzer.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.reasoning.logic_analyzer}
    - ${profiles.tools.code_execution.e2b_sandbox}
    - ${profiles.tools.data_apis.binance}
    - ${profiles.tools.data_apis.coingecko}
    - ${profiles.tools.data_apis.defillama}
    - ${profiles.tools.data_apis.arkham}

  config:
    analysis_modules:
      - technical_analysis
      - fundamental_analysis
      - onchain_analysis
      - sentiment_analysis

# CODE_INTERPRET Executors
code_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "CodeExecutor"
  type: "executor"
  task_type: "CODE_INTERPRET"
  description: "Executes code interpretation and generation tasks"

  model: ${profiles.models.gpt_4o}
  prompt_template: "executor/code.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.code_execution.python}
    - ${profiles.tools.code_execution.e2b_sandbox}

  config:
    languages: ["python", "javascript", "typescript", "rust", "go"]
    include_tests: true
    safety_checks: true

data_analyst_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "DataAnalystExecutor"
  type: "executor"
  task_type: "CODE_INTERPRET"
  description: "Executes data analysis and visualization tasks"

  model: ${profiles.models.gpt_4o}
  prompt_template: "executor/data_analyst.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.code_execution.python}
    - ${profiles.tools.utilities.csv_analyzer}

  config:
    libraries: ["pandas", "numpy", "matplotlib", "seaborn", "plotly"]
    auto_visualization: true

# IMAGE_GENERATION Executors
image_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "ImageExecutor"
  type: "executor"
  task_type: "IMAGE_GENERATION"
  description: "Executes image generation tasks"

  model: ${profiles.models.gpt_4o}
  prompt_template: "executor/image.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.image_generation.dalle}
    - ${profiles.tools.image_generation.stability}

  config:
    quality: "hd"
    style: "natural"
    n: 1

visualization_executor:
  _target_: roma.domain.value_objects.config.agent_config.AgentConfig
  name: "VisualizationExecutor"
  type: "executor"
  task_type: "IMAGE_GENERATION"
  description: "Creates data visualizations and diagrams"

  model: ${profiles.models.gpt_4o}
  prompt_template: "executor/visualization.jinja2"
  output_schema: "ExecutorResult"

  tools:
    - ${profiles.tools.code_execution.python}
    - ${profiles.tools.visualization.mermaid}

  config:
    chart_types: ["bar", "line", "scatter", "pie", "heatmap", "flowchart"]
    export_formats: ["png", "svg", "html"]